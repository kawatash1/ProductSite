{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\madks\\\\Documents\\\\FullStack\\\\Project 3\\\\client\\\\src\\\\pages\\\\Logout.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useNavigate } from 'react-router-dom'; // Используем useNavigate вместо useHistory\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Logout = () => {\n  _s();\n  const navigate = useNavigate(); // для редиректа после выхода\n\n  const handleLogout = async () => {\n    try {\n      // Отправка POST-запроса на сервер для выхода\n      const response = await axios.post('/api/auth/logout', {}, {\n        withCredentials: true\n      });\n\n      // Если выход успешен, перенаправляем на страницу входа\n      console.log(response.data.message);\n      navigate('/'); // Редирект на страницу входа или другую\n\n      // Можно также очистить токены из localStorage или других хранилищ\n      localStorage.removeItem('accessToken'); // если токен хранится в localStorage\n      localStorage.removeItem('refreshToken'); // если токен хранится в localStorage\n    } catch (error) {\n      console.error('Ошибка при выходе:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"logout-container\",\n    children: isLoggedIn ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\u0412\\u044B \\u0443\\u0432\\u0435\\u0440\\u0435\\u043D\\u044B, \\u0447\\u0442\\u043E \\u0445\\u043E\\u0442\\u0438\\u0442\\u0435 \\u0432\\u044B\\u0439\\u0442\\u0438?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLogout,\n        children: \"\\u0412\\u044B\\u0439\\u0442\\u0438\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u0412\\u044B \\u0443\\u0436\\u0435 \\u0432\\u044B\\u0448\\u043B\\u0438 \\u0438\\u0437 \\u0441\\u0438\\u0441\\u0442\\u0435\\u043C\\u044B\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(Logout, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c = Logout;\nexport default Logout;\nvar _c;\n$RefreshReg$(_c, \"Logout\");","map":{"version":3,"names":["React","useNavigate","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","Logout","_s","navigate","handleLogout","response","post","withCredentials","console","log","data","message","localStorage","removeItem","error","className","children","isLoggedIn","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/madks/Documents/FullStack/Project 3/client/src/pages/Logout.js"],"sourcesContent":["import React from 'react';\r\nimport { useNavigate } from 'react-router-dom'; // Используем useNavigate вместо useHistory\r\nimport axios from 'axios';\r\n\r\nconst Logout = () => {\r\n  const navigate = useNavigate(); // для редиректа после выхода\r\n\r\n  const handleLogout = async () => {\r\n    try {\r\n      // Отправка POST-запроса на сервер для выхода\r\n      const response = await axios.post('/api/auth/logout', {}, { withCredentials: true });\r\n\r\n      // Если выход успешен, перенаправляем на страницу входа\r\n      console.log(response.data.message);\r\n      navigate('/'); // Редирект на страницу входа или другую\r\n\r\n      // Можно также очистить токены из localStorage или других хранилищ\r\n      localStorage.removeItem('accessToken');  // если токен хранится в localStorage\r\n      localStorage.removeItem('refreshToken'); // если токен хранится в localStorage\r\n\r\n    } catch (error) {\r\n      console.error('Ошибка при выходе:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"logout-container\">\r\n      {isLoggedIn ? (\r\n        <>\r\n          <h2>Вы уверены, что хотите выйти?</h2>\r\n          <button onClick={handleLogout}>Выйти</button>\r\n        </>\r\n      ) : (\r\n        <h2>Вы уже вышли из системы</h2>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Logout;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,kBAAkB,CAAC,CAAC;AAChD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE1B,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAMC,QAAQ,GAAGR,WAAW,CAAC,CAAC,CAAC,CAAC;;EAEhC,MAAMS,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI;MACF;MACA,MAAMC,QAAQ,GAAG,MAAMT,KAAK,CAACU,IAAI,CAAC,kBAAkB,EAAE,CAAC,CAAC,EAAE;QAAEC,eAAe,EAAE;MAAK,CAAC,CAAC;;MAEpF;MACAC,OAAO,CAACC,GAAG,CAACJ,QAAQ,CAACK,IAAI,CAACC,OAAO,CAAC;MAClCR,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;;MAEf;MACAS,YAAY,CAACC,UAAU,CAAC,aAAa,CAAC,CAAC,CAAE;MACzCD,YAAY,CAACC,UAAU,CAAC,cAAc,CAAC,CAAC,CAAC;IAE3C,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdN,OAAO,CAACM,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;IAC5C;EACF,CAAC;EAED,oBACEhB,OAAA;IAAKiB,SAAS,EAAC,kBAAkB;IAAAC,QAAA,EAC9BC,UAAU,gBACTnB,OAAA,CAAAE,SAAA;MAAAgB,QAAA,gBACElB,OAAA;QAAAkB,QAAA,EAAI;MAA6B;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACtCvB,OAAA;QAAQwB,OAAO,EAAElB,YAAa;QAAAY,QAAA,EAAC;MAAK;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA,eAC7C,CAAC,gBAEHvB,OAAA;MAAAkB,QAAA,EAAI;IAAuB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI;EAChC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACnB,EAAA,CAjCID,MAAM;EAAA,QACON,WAAW;AAAA;AAAA4B,EAAA,GADxBtB,MAAM;AAmCZ,eAAeA,MAAM;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}