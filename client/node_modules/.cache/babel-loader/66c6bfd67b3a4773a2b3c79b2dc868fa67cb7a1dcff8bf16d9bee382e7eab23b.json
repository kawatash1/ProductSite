{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\madks\\\\Documents\\\\FullStack\\\\Project 3\\\\client\\\\src\\\\pages\\\\Logout.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useHistory } from 'react-router-dom'; // для редиректа после выхода\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Logout = () => {\n  _s();\n  const history = useHistory(); // для редиректа на страницу входа после выхода\n\n  const handleLogout = async () => {\n    try {\n      // Отправка POST-запроса на сервер для выхода\n      const response = await axios.post('/api/auth/logout', {}, {\n        withCredentials: true\n      });\n\n      // Если выход успешен, перенаправляем на страницу входа\n      console.log(response.data.message);\n      history.push('/login'); // редирект на страницу входа или другую\n\n      // Можно также очистить токены из localStorage или других хранилищ\n      localStorage.removeItem('accessToken'); // если токен хранится в localStorage\n      localStorage.removeItem('refreshToken'); // если токен хранится в localStorage\n    } catch (error) {\n      console.error('Ошибка при выходе:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"logout-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u0412\\u044B \\u0443\\u0432\\u0435\\u0440\\u0435\\u043D\\u044B, \\u0447\\u0442\\u043E \\u0445\\u043E\\u0442\\u0438\\u0442\\u0435 \\u0432\\u044B\\u0439\\u0442\\u0438?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLogout,\n      children: \"\\u0412\\u044B\\u0439\\u0442\\u0438\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(Logout, \"9cZfZ04734qoCGIctmKX7+sX6eU=\", false, function () {\n  return [useHistory];\n});\n_c = Logout;\nexport default Logout;\nvar _c;\n$RefreshReg$(_c, \"Logout\");","map":{"version":3,"names":["React","useHistory","axios","jsxDEV","_jsxDEV","Logout","_s","history","handleLogout","response","post","withCredentials","console","log","data","message","push","localStorage","removeItem","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/madks/Documents/FullStack/Project 3/client/src/pages/Logout.js"],"sourcesContent":["import React from 'react';\r\nimport { useHistory } from 'react-router-dom'; // для редиректа после выхода\r\nimport axios from 'axios';\r\n\r\nconst Logout = () => {\r\n  const history = useHistory(); // для редиректа на страницу входа после выхода\r\n\r\n  const handleLogout = async () => {\r\n    try {\r\n      // Отправка POST-запроса на сервер для выхода\r\n      const response = await axios.post('/api/auth/logout', {}, { withCredentials: true });\r\n\r\n      // Если выход успешен, перенаправляем на страницу входа\r\n      console.log(response.data.message);\r\n      history.push('/login'); // редирект на страницу входа или другую\r\n\r\n      // Можно также очистить токены из localStorage или других хранилищ\r\n      localStorage.removeItem('accessToken');  // если токен хранится в localStorage\r\n      localStorage.removeItem('refreshToken'); // если токен хранится в localStorage\r\n\r\n    } catch (error) {\r\n      console.error('Ошибка при выходе:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"logout-container\">\r\n      <h2>Вы уверены, что хотите выйти?</h2>\r\n      <button onClick={handleLogout}>Выйти</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Logout;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,UAAU,QAAQ,kBAAkB,CAAC,CAAC;AAC/C,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAMC,OAAO,GAAGN,UAAU,CAAC,CAAC,CAAC,CAAC;;EAE9B,MAAMO,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI;MACF;MACA,MAAMC,QAAQ,GAAG,MAAMP,KAAK,CAACQ,IAAI,CAAC,kBAAkB,EAAE,CAAC,CAAC,EAAE;QAAEC,eAAe,EAAE;MAAK,CAAC,CAAC;;MAEpF;MACAC,OAAO,CAACC,GAAG,CAACJ,QAAQ,CAACK,IAAI,CAACC,OAAO,CAAC;MAClCR,OAAO,CAACS,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;;MAExB;MACAC,YAAY,CAACC,UAAU,CAAC,aAAa,CAAC,CAAC,CAAE;MACzCD,YAAY,CAACC,UAAU,CAAC,cAAc,CAAC,CAAC,CAAC;IAE3C,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdP,OAAO,CAACO,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;IAC5C;EACF,CAAC;EAED,oBACEf,OAAA;IAAKgB,SAAS,EAAC,kBAAkB;IAAAC,QAAA,gBAC/BjB,OAAA;MAAAiB,QAAA,EAAI;IAA6B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtCrB,OAAA;MAAQsB,OAAO,EAAElB,YAAa;MAAAa,QAAA,EAAC;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1C,CAAC;AAEV,CAAC;AAACnB,EAAA,CA3BID,MAAM;EAAA,QACMJ,UAAU;AAAA;AAAA0B,EAAA,GADtBtB,MAAM;AA6BZ,eAAeA,MAAM;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}