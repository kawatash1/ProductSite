{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\madks\\\\Documents\\\\FullStack\\\\Project 3\\\\client\\\\src\\\\pages\\\\Logout.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useNavigate } from 'react-router-dom'; // Используем useNavigate вместо useHistory\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Logout = () => {\n  _s();\n  const navigate = useNavigate(); // для редиректа после выхода\n\n  const handleLogout = async () => {\n    try {\n      // Отправка POST-запроса на сервер для выхода\n      const response = await axios.post('/api/auth/logout', {}, {\n        withCredentials: true\n      });\n\n      // Если выход успешен, перенаправляем на страницу входа\n      console.log(response.data.message);\n      navigate('/'); // Редирект на страницу входа или другую\n\n      // Можно также очистить токены из localStorage или других хранилищ\n      localStorage.removeItem('accessToken'); // если токен хранится в localStorage\n      localStorage.removeItem('refreshToken'); // если токен хранится в localStorage\n    } catch (error) {\n      console.error('Ошибка при выходе:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"logout-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Are you sure you want to go out?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLogout,\n      children: \"Logout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(Logout, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c = Logout;\nexport default Logout;\nvar _c;\n$RefreshReg$(_c, \"Logout\");","map":{"version":3,"names":["React","useNavigate","axios","jsxDEV","_jsxDEV","Logout","_s","navigate","handleLogout","response","post","withCredentials","console","log","data","message","localStorage","removeItem","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/madks/Documents/FullStack/Project 3/client/src/pages/Logout.js"],"sourcesContent":["import React from 'react';\r\nimport { useNavigate } from 'react-router-dom'; // Используем useNavigate вместо useHistory\r\nimport axios from 'axios';\r\n\r\nconst Logout = () => {\r\n  const navigate = useNavigate(); // для редиректа после выхода\r\n\r\n  const handleLogout = async () => {\r\n    try {\r\n      // Отправка POST-запроса на сервер для выхода\r\n      const response = await axios.post('/api/auth/logout', {}, { withCredentials: true });\r\n\r\n      // Если выход успешен, перенаправляем на страницу входа\r\n      console.log(response.data.message);\r\n      navigate('/'); // Редирект на страницу входа или другую\r\n\r\n      // Можно также очистить токены из localStorage или других хранилищ\r\n      localStorage.removeItem('accessToken');  // если токен хранится в localStorage\r\n      localStorage.removeItem('refreshToken'); // если токен хранится в localStorage\r\n\r\n    } catch (error) {\r\n      console.error('Ошибка при выходе:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"logout-container\">\r\n       <p></p><h2>Are you sure you want to go out?</h2>\r\n      <button onClick={handleLogout}>Logout</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Logout;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,kBAAkB,CAAC,CAAC;AAChD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAMC,QAAQ,GAAGN,WAAW,CAAC,CAAC,CAAC,CAAC;;EAEhC,MAAMO,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI;MACF;MACA,MAAMC,QAAQ,GAAG,MAAMP,KAAK,CAACQ,IAAI,CAAC,kBAAkB,EAAE,CAAC,CAAC,EAAE;QAAEC,eAAe,EAAE;MAAK,CAAC,CAAC;;MAEpF;MACAC,OAAO,CAACC,GAAG,CAACJ,QAAQ,CAACK,IAAI,CAACC,OAAO,CAAC;MAClCR,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;;MAEf;MACAS,YAAY,CAACC,UAAU,CAAC,aAAa,CAAC,CAAC,CAAE;MACzCD,YAAY,CAACC,UAAU,CAAC,cAAc,CAAC,CAAC,CAAC;IAE3C,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdN,OAAO,CAACM,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;IAC5C;EACF,CAAC;EAED,oBACEd,OAAA;IAAKe,SAAS,EAAC,kBAAkB;IAAAC,QAAA,gBAC9BhB,OAAA;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eAAApB,OAAA;MAAAgB,QAAA,EAAI;IAAgC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjDpB,OAAA;MAAQqB,OAAO,EAAEjB,YAAa;MAAAY,QAAA,EAAC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3C,CAAC;AAEV,CAAC;AAAClB,EAAA,CA3BID,MAAM;EAAA,QACOJ,WAAW;AAAA;AAAAyB,EAAA,GADxBrB,MAAM;AA6BZ,eAAeA,MAAM;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}